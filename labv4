int Brain_precision = 0, Console_precision = 0;

float myVariable;

event message1 = event();

// "when started" hat block
int whenStarted1() {
  RoboticArm1.setMasteringValues(1761.0,2171.0,1884.0,492.0);
  RoboticArm1.setToolTipOffset(1.05, 0.0, -1.0);
  RoboticArm1.setJointMoveSpeed(25.0);
  RoboticArm1.setLinearMoveSpeed(5.0);
  RoboticArm1.moveToPositionJoint(5.0, 4.0, 2.4);
  RoboticArm1.moveToPositionJoint(5.0, -4.0, 2.4);
  RoboticArm1.moveToPositionLinear(5.0, 4.0, 3.4);
  return 0;
}

// "when started" hat block
int whenStarted2() {
  Brain.Screen.setFont(mono60);
  Brain_precision = 3;
  while (true) {
    Brain.Screen.clearScreen();
    // Display the X position on row 1
    Brain.Screen.setCursor(1, 1);
    Brain.Screen.print("X: ");
    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RoboticArm1.getAxisPosition(xaxis)));
    Brain.Screen.newLine();
    // Display the Y position on row 2
    Brain.Screen.print("Y: ");
    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RoboticArm1.getAxisPosition(yaxis)));
    Brain.Screen.newLine();
    // Display the Z position on row 3
    Brain.Screen.print("Z: ");
    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RoboticArm1.getAxisPosition(zaxis)));
    wait(0.2, seconds);
  wait(5, msec);
  }
  return 0;
}


int main() {
  vex::task ws1(whenStarted2);
  whenStarted1();
}
